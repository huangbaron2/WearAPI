{"version":3,"sources":["Header.js","Pagination.js","Filter.js","FirstPage.js","Post.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Component","Pagination","totalPages","paginate","isColor","pageNumbers","i","push","map","number","key","onClick","style","backgroundColor","Filter","props","state","brand","model","color","article","category","items","brandAll","modelAll","colorAll","articleAll","categoryAll","imageAll","allDB","page","paging","handleBrand","bind","handleColor","handleModel","handleArticle","handleCategory","handleSubmit","updateArrays","updateHandler","makeAny","value","newL","this","setState","o","image","insertFront","Array","from","Set","sort","listing","event","preventDefault","fetch","String","then","res","json","result","results","console","log","doPageArray","error","undefined","sortallDB","window","addEventListener","e","onSubmit","id","DropdownButton","title","item","Dropdown","Item","Divider","Button","variant","handleAll","as","type","clothes","index","src","FirstPage","Post","brandChange","colorChange","articleChange","modelChange","categoryChange","imageChange","submitPost","goatChange","submitLink","target","includes","split","clothing","method","mode","headers","body","JSON","stringify","nextPost","something","placeholder","onChange","name","App","path","exact","component","Boolean","location","hostname","match","require","config","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5f639033.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Header extends Component {\r\n    render(){\r\n        return(\r\n            <div className = \"headerBox\">\r\n                <ul className = \"postList\">\r\n                    <li className = \"postLi\"><a href = \"/#/Post\"><button className = \"postButton\">Add to the database!</button></a></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport const Pagination = ({ totalPages, paginate, isColor }) => {\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= totalPages; i++){\r\n        pageNumbers.push(i)\r\n    };\r\n\r\n    return (\r\n        <nav>\r\n            <ul className = \"paginationBox\">\r\n                {pageNumbers.map(number => (\r\n                <li key = {number} className = \"paginationList\">\r\n                    <button onClick = {() => paginate(number)} className = \"paginationNumbers\" style={{backgroundColor: isColor(number)}}>\r\n                        {number}\r\n                    </button>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React, { Component } from 'react'\r\nimport {Dropdown, Button, DropdownButton} from 'react-bootstrap'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Pagination } from './Pagination';\r\n\r\n\r\nexport class Filter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = [\r\n                    {brand:\"Any\"},\r\n                    {model:\"Any\"},\r\n                    {color:\"Any\"},\r\n                    {article:\"Any\"},\r\n                    {category:\"Any\"},\r\n                    {items: []},\r\n                    {brandAll: []},\r\n                    {modelAll: []},\r\n                    {colorAll: []},\r\n                    {articleAll: []},\r\n                    {categoryAll: []},\r\n                    {imageAll: []},\r\n                    {allDB: []},\r\n                    {page: \"1\"},\r\n                    {totalPages: 0},\r\n                    {paging: \"Any\"}\r\n                    ];\r\n        this.handleBrand = this.handleBrand.bind(this)\r\n        this.handleColor = this.handleColor.bind(this)\r\n        this.handleModel = this.handleModel.bind(this)\r\n        this.handleArticle = this.handleArticle.bind(this)\r\n        this.handleCategory = this.handleCategory.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.updateArrays = this.updateArrays.bind(this);\r\n        this.paginate = this.paginate.bind(this);\r\n        this.isColor = this.isColor.bind(this);\r\n        this.updateHandler = this.updateHandler.bind(this);\r\n        this.makeAny = this.makeAny.bind(this);\r\n    };\r\n\r\n    insertFront (value) {\r\n      var newL = []\r\n      newL.push(\"Any\")\r\n      for (var i of value){\r\n        if (i !== \"Any\"){\r\n          newL.push(i)\r\n        }\r\n      }\r\n      return newL\r\n    }\r\n\r\n    sortallDB () {\r\n      this.setState({\r\n        brandAll:[],\r\n        colorAll:[],\r\n        modelAll:[],\r\n        articleAll:[],\r\n        categoryAll:[],\r\n        imageAll:[]},\r\n        () => {\r\n        for (var i of this.state.allDB){\r\n          for (var o of i.brand){\r\n            this.state.brandAll.push(o)\r\n          }\r\n          for (o of i.model){\r\n            this.state.modelAll.push(o)\r\n          }\r\n          for (o of i.color){\r\n            this.state.colorAll.push(o)\r\n          }\r\n          for (o of i.article){\r\n            this.state.articleAll.push(o)\r\n          }\r\n          for (o of i.category){\r\n            this.state.categoryAll.push(o)\r\n          }\r\n          for (o of i.image){\r\n            this.state.imageAll.push(o)\r\n          }\r\n          this.setState({\r\n            brandAll: this.insertFront(Array.from(new Set(this.state.brandAll)).sort()),\r\n            modelAll: this.insertFront(Array.from(new Set(this.state.modelAll)).sort()),\r\n            colorAll: this.insertFront(Array.from(new Set(this.state.colorAll)).sort()),\r\n            articleAll: this.insertFront(Array.from(new Set(this.state.articleAll)).sort()),\r\n            categoryAll: this.insertFront(Array.from(new Set(this.state.categoryAll)).sort())\r\n          }, () => {\r\n          })\r\n      }\r\n    })\r\n  \r\n    }\r\n\r\n    resultArray (value) {\r\n      var listing = []\r\n      for (var i of value){\r\n        listing.push(i)\r\n      }\r\n      return listing\r\n    }\r\n\r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n      this.makeAny();\r\n      fetch(`http://54.90.119.121:9000/brand=${this.state.brand}&model=${this.state.model}&color=${this.state.color}&article=${String(this.state.article)}&category=${this.state.category}?page=${this.state.page}&limit=8`)\r\n      //http://54.90.119.121:9000/brand=Nike&model=Any&color=Any&article=Any&category=Any\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            if (result !== \"NO\"){}\r\n            this.setState({\r\n              items: result.results,\r\n              totalPages: result.totalPages\r\n            },\r\n            console.log(\"not obj?\", result),\r\n            this.doPageArray);\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              items: [],\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n\r\n    makeAny() {\r\n      if (this.state.brand == undefined){\r\n        this.setState({brand: \"Any\"})\r\n      }\r\n      if (this.state.model == undefined){\r\n        this.setState({model: \"Any\"})\r\n      }\r\n      if (this.state.brand == undefined){\r\n        this.setState({color: \"Any\"})\r\n      }\r\n      if (this.state.brand == undefined){\r\n        this.setState({article: \"Any\"})\r\n      }\r\n      if (this.state.brand == undefined){\r\n        this.setState({category: \"Any\"})\r\n      }\r\n    }\r\n\r\n    updateHandler() {\r\n      console.log(\"B\", this.state.page)\r\n      fetch(`http://54.90.119.121:9000/brand=${this.state.brand}&model=${this.state.model}&color=${this.state.color}&article=${String(this.state.article)}&category=${this.state.category}?page=${this.state.page}&limit=8`)\r\n      //http://54.90.119.121:9000/brand=Nike&model=Any&color=Any&article=Any&category=Any\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            if (result !== \"NO\"){}\r\n            this.setState({\r\n              items: result.results,\r\n              totalPages: result.totalPages\r\n            },\r\n            console.log(\"not obj?\", result),\r\n            this.doPageArray);\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              items: [],\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n\r\n    updateArrays () {\r\n          fetch(\"http://54.90.119.121:9000/allDB\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                allDB: result\r\n              },\r\n              () => {\r\n                this.sortallDB()\r\n                console.log(\"DB\", this.state.allDB)\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n    }\r\n\r\n    componentDidMount () {\r\n        window.addEventListener('load', this.updateArrays, this.updateHandler);\r\n        this.setState({\r\n          page: \"1\",\r\n        })\r\n    }\r\n\r\n    handleBrand(event) {\r\n      this.setState({\r\n        page: \"1\"\r\n      })\r\n        this.setState({brand: event})\r\n    }\r\n\r\n    handleColor(event) {\r\n      this.setState({\r\n        page: \"1\"\r\n      })\r\n        this.setState({color: event})\r\n    }\r\n\r\n    handleModel(event) {\r\n      this.setState({\r\n        page: \"1\"\r\n      })\r\n        this.setState({model: event})\r\n    }\r\n\r\n\r\n    handleArticle(event) {\r\n      this.setState({\r\n        page: \"1\"\r\n      })\r\n        this.setState({article: event})\r\n    }\r\n\r\n    handleCategory(event) {\r\n      this.setState({\r\n        page: \"1\"\r\n      })\r\n        this.setState({category: event})\r\n    }\r\n\r\n    handleAll() {\r\n        this.handleBrand(\"Any\");\r\n        this.handleColor(\"Any\");\r\n        this.handleArticle(\"Any\");\r\n        this.handleModel(\"Any\");\r\n        this.handleCategory(\"Any\");\r\n    }\r\n\r\n    paginate (e) {\r\n      if (e !== this.state.page){\r\n        this.setState ({\r\n          page: e\r\n        }, () => {\r\n          this.updateHandler()\r\n        });\r\n      }\r\n    }\r\n\r\n    isColor(e) {\r\n      if (String(e) === this.state.page){\r\n        return \"green\"\r\n      }\r\n      else{\r\n        return \"#9370DB\"\r\n      }\r\n    }\r\n\r\n    render(){\r\n        if (this.state.items === undefined){\r\n            return (\r\n                <div className = \"filterBox\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label id = \"label\">Pick your filters\r\n                        <br/>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Brand</h4>\r\n                        <DropdownButton id=\"dropdown\"  title= {this.state.brand}>\r\n                            { this.state.brandAll && this.state.brandAll.map(item => <Dropdown.Item  onClick = {() => this.handleBrand(item)} > {item} <Dropdown.Divider/></Dropdown.Item>  )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Model</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.model}>\r\n                            { this.state.modelAll && this.state.modelAll.map(item => <Dropdown.Item  onClick = {() => this.handleModel(item)}> {item} <Dropdown.Divider/></Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Color</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.color}>\r\n                          { this.state.colorAll && this.state.colorAll.map(item => <Dropdown.Item  onClick = {() => this.handleColor(item)}> {item} <Dropdown.Divider/></Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Article</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.article}>\r\n                          { this.state.articleAll && this.state.articleAll.map(item => <Dropdown.Item  onClick = {() => this.handleArticle(item)}> {item} <Dropdown.Divider/></Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Category</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.category}>\r\n                          { this.state.categoryAll && this.state.categoryAll.map(item => <Dropdown.Item  onClick = {() => this.handleCategory(item)}> {item} <Dropdown.Divider/></Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                       \r\n                    </label>\r\n                    <br/>\r\n                    <Button id = \"btnAll\" variant=\"primary\" onClick = {() => this.handleAll()}> All </Button>\r\n                    <Button id = \"inputButton\" as=\"input\" type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n          return(\r\n            <div>                \r\n              <div className = \"filterBox\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label id = \"label\">Pick your filters\r\n                    <br/>\r\n                    <div className = \"selection\">\r\n                    <h4 className = \"selectTitle\">Brand</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.brand}>\r\n                            { this.state.brandAll && this.state.brandAll.map(item => <Dropdown.Item  onClick = {() => this.handleBrand(item)}> {item} <Dropdown.Divider/></Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Model</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.model}>\r\n                            { this.state.modelAll && this.state.modelAll.map(item => <Dropdown.Item  onClick = {() => this.handleModel(item)}> {item} <Dropdown.Divider/></Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Color</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.color}>\r\n                          { this.state.colorAll && this.state.colorAll.map(item => <Dropdown.Item  onClick = {() => this.handleColor(item)}> {item} <Dropdown.Divider/></Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Article</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.article}>\r\n                          { this.state.articleAll && this.state.articleAll.map(item => <Dropdown.Item  onClick = {() => this.handleArticle(item)}> {item} <Dropdown.Divider/></Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Category</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.category}>\r\n                          { this.state.categoryAll && this.state.categoryAll.map(item => <Dropdown.Item  onClick = {() => this.handleCategory(item)}> {item} <Dropdown.Divider/></Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                    </label>\r\n                    <br/>\r\n                    <Button id = \"btnAll\" variant=\"primary\" onClick = {() => this.handleAll()}> All </Button>\r\n                    <Button id = \"inputButton\" as=\"input\" type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n                <div className=\"listBox\">\r\n                    {this.state.items.map((clothes, index) => (\r\n                    <div key={index} className = \"bundles\">\r\n                        <img className = \"imageTitle\" src = {clothes.image}></img>\r\n                        <h3 className = \"brandTitle\">{clothes.brand}</h3>\r\n                        <p className = \"modelTitle\">{clothes.model}</p>\r\n                        <p className = \"colorTitle\">{clothes.color}</p>\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <Pagination totalPages = {this.state.totalPages} paginate = {this.paginate} isColor = {this.isColor}/>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Filter;\r\n\r\n\r\n/*\r\nfetch(\"http://54.90.119.121:9000/all=brand\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                brandAll: result\r\n              },\r\n              () => {\r\n\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n          fetch(\"http://54.90.119.121:9000/all=model\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                modelAll: result\r\n              },\r\n              () => {\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n          fetch(\"http://54.90.119.121:9000/all=color\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                colorAll: result\r\n              },\r\n              () => {\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n          fetch(\"http://54.90.119.121:9000/all=article\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                articleAll: result\r\n              },\r\n              () => {\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n          fetch(\"http://54.90.119.121:9000/all=category\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                categoryAll: result\r\n              },\r\n              () => {\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n          */","import React, {Component} from 'react';\r\nimport Header from './Header'\r\nimport Filter from './Filter'\r\nimport './App.css';\r\n\r\nclass FirstPage extends Component{\r\n  render(){\r\n    return (\r\n        <div className = \"allBox\">\r\n            <Header/>\r\n            <Filter/>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default FirstPage;\r\n","import React, { Component } from 'react'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = [\r\n                    {brand:\"Any\"},\r\n                    {model:\"Any\"},\r\n                    {color:\"Any\"},\r\n                    {article:\"Any\"},\r\n                    {category:\"Any\"},\r\n                    {image:\"Any\"}\r\n                    ];\r\n        this.brandChange = this.brandChange.bind(this)\r\n        this.colorChange = this.colorChange.bind(this)\r\n        this.articleChange = this.articleChange.bind(this)\r\n        this.modelChange = this.modelChange.bind(this)\r\n        this.categoryChange = this.categoryChange.bind(this)\r\n        this.imageChange = this.imageChange.bind(this)\r\n        this.submitPost = this.submitPost.bind(this)\r\n        this.goatChange = this.goatChange.bind(this)\r\n        this.submitLink = this.submitLink.bind(this)\r\n    };\r\n\r\n    brandChange (e) {\r\n        if (e.target.value.includes(\",\")){\r\n            var newL = []\r\n            this.setState({brand: (e.target.value.split(','))})\r\n        }\r\n        else{\r\n            newL = [e.target.value]\r\n            this.setState({brand: newL}, console.log(this.state.brand))\r\n        }\r\n    }\r\n    modelChange (e) {\r\n        if (e.target.value.includes(\",\")){\r\n            var newL = []\r\n            this.setState({model: (e.target.value.split(','))})\r\n        }\r\n        else{\r\n            newL = [e.target.value]\r\n            this.setState({model: newL}, console.log(this.state.model))\r\n        }\r\n    }\r\n    colorChange (e) {\r\n        if (e.target.value.includes(\",\")){\r\n            var newL = []\r\n            this.setState({color: e.target.value.split(',')})\r\n        }\r\n        else{\r\n            newL = [e.target.value]\r\n            this.setState({color: newL}, console.log(this.state.color))\r\n        }\r\n    }\r\n    articleChange (e) {\r\n        if (e.target.value.includes(\",\")){\r\n            var newL = []\r\n            this.setState({article: (e.target.value.split(','))})\r\n        }\r\n        else{\r\n            newL = [e.target.value]\r\n            this.setState(this.state.article = newL, console.log(this.state.article))\r\n        }\r\n    }\r\n    categoryChange (e) {\r\n        if (e.target.value.includes(\",\")){\r\n            var newL = []\r\n            this.setState({category: (e.target.value.split(','))})\r\n        }\r\n        else{\r\n            newL = [e.target.value]\r\n            this.setState(this.state.category = newL, console.log(this.state.category))\r\n        }\r\n    }\r\n    imageChange (e) {\r\n        this.setState(\r\n            {image: e.target.value},\r\n            console.log(this.state.image)\r\n        )\r\n    }\r\n\r\n    nextPost(clothing){\r\n        fetch('http://54.90.119.121:9000/Post', {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify(clothing)\r\n        })\r\n    }\r\n\r\n    submitPost (event) {\r\n        event.preventDefault();\r\n        const clothing = [{\r\n            brand: this.state.brand,\r\n            model: this.state.model,\r\n            color: this.state.color,\r\n            article: this.state.article,\r\n            category: this.state.category,\r\n            image: this.state.image\r\n          }];\r\n        this.nextPost(clothing)\r\n    }\r\n\r\n    goatChange (event) {\r\n        console.log(event.target.value)\r\n    }\r\n\r\n    submitLink (event) {\r\n        event.preventDefault()\r\n        fetch('http://54.90.119.121:9000/Link', {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify({something: \"More\"})\r\n        })\r\n        console.log(\"Submit\")\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = 'postBox'>\r\n                    <form className = 'postForm' onSubmit = { this.submitPost }>\r\n                        Enter the brand <input type=\"text\" id = \"brandInput\" placeholder = \"Brand\" onChange={ this.brandChange }/>\r\n                        <br/>\r\n                        Enter the model <input type=\"text\" id = \"modelInput\" placeholder = \"Model\" onChange={ this.modelChange }/>\r\n                        <br/>\r\n                        Enter the color <input type=\"text\" id = \"colorInput\" placeholder = \"Color\" onChange={ this.colorChange }/>\r\n                        <br/>\r\n                        Enter the article <input type=\"text\" id = \"articleInput\" placeholder = \"Article\" onChange={ this.articleChange }/>\r\n                        <br/>\r\n                        Enter the category <input type=\"text\" id = \"categoryInput\" placeholder = \"Category\" onChange={ this.categoryChange }/>\r\n                        <br/>\r\n                        Enter the image <input type=\"text\" id = \"imageInput\" placeholder = \"Image\" onChange={ this.imageChange }/>\r\n                        <button type = \"submit\" name = \"submit\">Submit</button>\r\n                    </form>\r\n                    <br/>\r\n                    <form className = 'postForm' onSubmit = { this.submitLink }>\r\n                        Or use a Goat link <input type=\"text\" id = \"goatInput\" placeholder = \"Link\" onChange = { this.goatChange }/>\r\n                        <button type = \"submit\" name = \"submit\">Submit</button>\r\n                    </form>\r\n                    <a href = \"/\"><button className = \"postButton\">Home</button></a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;","import React from 'react';\nimport FirstPage from './FirstPage'\nimport Post from './Post'\nimport './App.css';\nimport { Route, HashRouter,  } from 'react-router-dom'\n\nfunction App() {\n  //basename={process.env.PUBLIC_URL}\n  return (\n    <div >\n        <HashRouter>\n          <Route path = '/' exact component = { FirstPage }/>\n          <Route path = \"/Post\" exact component = { Post }/>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\nrequire('dotenv').config()\n\nReactDOM.render(<HashRouter basename={process.env.PUBLIC_URL}>< App /></HashRouter>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}