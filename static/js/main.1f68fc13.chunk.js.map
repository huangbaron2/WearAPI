{"version":3,"sources":["Post.js","Header.js","Pagination.js","Filter.js","FirstPage.js","App.js","serviceWorker.js","index.js"],"names":["Post","props","state","brand","model","color","article","category","image","brandChange","bind","colorChange","articleChange","modelChange","categoryChange","imageChange","submitPost","goatChange","submitLink","e","target","value","includes","newL","this","setState","split","console","log","clothing","fetch","method","mode","headers","body","JSON","stringify","event","preventDefault","nextPost","something","className","onSubmit","type","id","placeholder","onChange","name","href","Component","Header","Pagination","totalPages","paginate","pageNumbers","i","push","map","number","key","onClick","Filter","items","brandAll","modelAll","colorAll","articleAll","categoryAll","imageAll","allDB","page","paging","handleBrand","handleColor","handleModel","handleArticle","handleCategory","handleSubmit","updateArrays","updateHandler","o","insertFront","Array","from","Set","sort","listing","String","then","res","json","result","results","doPageArray","error","sortallDB","window","addEventListener","undefined","DropdownButton","title","item","Dropdown","Item","Button","variant","handleAll","as","clothes","index","src","FirstPage","App","path","exact","component","Boolean","location","hostname","match","require","config","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1f68fc13.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { InputGroup, FormControl, Form } from 'react-bootstrap'\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = [\r\n                    {brand:\"Any\"},\r\n                    {model:\"Any\"},\r\n                    {color:\"Any\"},\r\n                    {article:\"Any\"},\r\n                    {category:\"Any\"},\r\n                    {image:\"Any\"}\r\n                    ];\r\n        this.brandChange = this.brandChange.bind(this)\r\n        this.colorChange = this.colorChange.bind(this)\r\n        this.articleChange = this.articleChange.bind(this)\r\n        this.modelChange = this.modelChange.bind(this)\r\n        this.categoryChange = this.categoryChange.bind(this)\r\n        this.imageChange = this.imageChange.bind(this)\r\n        this.submitPost = this.submitPost.bind(this)\r\n        this.goatChange = this.goatChange.bind(this)\r\n        this.submitLink = this.submitLink.bind(this)\r\n    };\r\n\r\n    brandChange (e) {\r\n        if (e.target.value.includes(\",\")){\r\n            var newL = []\r\n            this.setState({brand: (e.target.value.split(','))})\r\n        }\r\n        else{\r\n            newL = [e.target.value]\r\n            this.setState(this.state.brand = newL, console.log(this.state.brand))\r\n        }\r\n    }\r\n    modelChange (e) {\r\n        if (e.target.value.includes(\",\")){\r\n            var newL = []\r\n            this.setState({model: (e.target.value.split(','))})\r\n        }\r\n        else{\r\n            newL = [e.target.value]\r\n            this.setState(this.state.model = newL, console.log(this.state.model))\r\n        }\r\n    }\r\n    colorChange (e) {\r\n        if (e.target.value.includes(\",\")){\r\n            var newL = []\r\n            this.setState({color: e.target.value.split(',')})\r\n        }\r\n        else{\r\n            newL = [e.target.value]\r\n            this.setState(this.state.color = newL, console.log(this.state.color))\r\n        }\r\n    }\r\n    articleChange (e) {\r\n        if (e.target.value.includes(\",\")){\r\n            var newL = []\r\n            this.setState({article: (e.target.value.split(','))})\r\n        }\r\n        else{\r\n            newL = [e.target.value]\r\n            this.setState(this.state.article = newL, console.log(this.state.article))\r\n        }\r\n    }\r\n    categoryChange (e) {\r\n        if (e.target.value.includes(\",\")){\r\n            var newL = []\r\n            this.setState({category: (e.target.value.split(','))})\r\n        }\r\n        else{\r\n            newL = [e.target.value]\r\n            this.setState(this.state.category = newL, console.log(this.state.category))\r\n        }\r\n    }\r\n    imageChange (e) {\r\n        this.setState(\r\n            {image: e.target.value},\r\n            console.log(this.state.image)\r\n        )\r\n    }\r\n\r\n    nextPost(clothing){\r\n        fetch('http://localhost:9000/Post', {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify(clothing)\r\n        })\r\n    }\r\n\r\n    submitPost (event) {\r\n        event.preventDefault();\r\n        const clothing = [{\r\n            brand: this.state.brand,\r\n            model: this.state.model,\r\n            color: this.state.color,\r\n            article: this.state.article,\r\n            category: this.state.category,\r\n            image: this.state.image\r\n          }];\r\n        this.nextPost(clothing)\r\n    }\r\n\r\n    goatChange (event) {\r\n        console.log(event.target.value)\r\n    }\r\n\r\n    submitLink (event) {\r\n        event.preventDefault()\r\n        fetch('http://localhost:9000/Link', {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify({something: \"More\"})\r\n        })\r\n        console.log(\"Submit\")\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = 'postBox'>\r\n                    <form className = 'postForm' onSubmit = { this.submitPost }>\r\n                        Enter the brand <input type=\"text\" id = \"brandInput\" placeholder = \"Brand\" onChange={ this.brandChange }/>\r\n                        <br/>\r\n                        Enter the model <input type=\"text\" id = \"modelInput\" placeholder = \"Model\" onChange={ this.modelChange }/>\r\n                        <br/>\r\n                        Enter the color <input type=\"text\" id = \"colorInput\" placeholder = \"Color\" onChange={ this.colorChange }/>\r\n                        <br/>\r\n                        Enter the article <input type=\"text\" id = \"articleInput\" placeholder = \"Article\" onChange={ this.articleChange }/>\r\n                        <br/>\r\n                        Enter the category <input type=\"text\" id = \"categoryInput\" placeholder = \"Category\" onChange={ this.categoryChange }/>\r\n                        <br/>\r\n                        Enter the image <input type=\"text\" id = \"imageInput\" placeholder = \"Image\" onChange={ this.imageChange }/>\r\n                        <button type = \"submit\" name = \"submit\">Submit</button>\r\n                    </form>\r\n                    <br/>\r\n                    <form className = 'postForm' onSubmit = { this.submitLink }>\r\n                        Or use a Goat link <input type=\"text\" id = \"goatInput\" placeholder = \"Link\" onChange = { this.goatChange }/>\r\n                        <button type = \"submit\" name = \"submit\">Submit</button>\r\n                    </form>\r\n                    <a href = \"/\"><button className = \"postButton\">Home</button></a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;","import React, { Component } from 'react'\r\nimport Post from \"./Post\"; \r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Router , Route, Switch } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n    render(){\r\n        return(\r\n            <div className = \"headerBox\">\r\n                <ul className = \"postList\">\r\n                    <li className = \"postLi\"><a href = \"/#/Post\"><button className = \"postButton\">Post</button></a></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport { Filter } from './Filter'\r\n\r\nexport const Pagination = ({ totalPages, paginate }) => {\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= totalPages; i++){\r\n        pageNumbers.push(i)\r\n    };\r\n\r\n    return (\r\n        <nav>\r\n            <ul className = \"paginationBox\">\r\n                {pageNumbers.map(number => (\r\n                <li key = {number} className = \"paginationList\">\r\n                    <button onClick = {() => paginate(number)} className = \"paginationNumbers\">\r\n                        {number}\r\n                    </button>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React, { Component } from 'react'\r\nimport {Dropdown, Button, DropdownButton} from 'react-bootstrap'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Pagination } from './Pagination';\r\n\r\n\r\nexport class Filter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = [\r\n                    {brand:\"Any\"},\r\n                    {model:\"Any\"},\r\n                    {color:\"Any\"},\r\n                    {article:\"Any\"},\r\n                    {category:\"Any\"},\r\n                    {items: []},\r\n                    {brandAll: []},\r\n                    {modelAll: []},\r\n                    {colorAll: []},\r\n                    {articleAll: []},\r\n                    {categoryAll: []},\r\n                    {imageAll: []},\r\n                    {allDB: []},\r\n                    {page: \"1\"},\r\n                    {totalPages: 0},\r\n                    {paging: \"Any\"}\r\n                    ];\r\n        this.handleBrand = this.handleBrand.bind(this)\r\n        this.handleColor = this.handleColor.bind(this)\r\n        this.handleModel = this.handleModel.bind(this)\r\n        this.handleArticle = this.handleArticle.bind(this)\r\n        this.handleCategory = this.handleCategory.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.updateArrays = this.updateArrays.bind(this);\r\n        this.paginate = this.paginate.bind(this);\r\n        this.updateHandler = this.updateHandler.bind(this);\r\n    };\r\n\r\n    insertFront (value) {\r\n      var newL = []\r\n      newL.push(\"Any\")\r\n      for (var i of value){\r\n        if (i != \"Any\"){\r\n          newL.push(i)\r\n        }\r\n      }\r\n      return newL\r\n    }\r\n\r\n    sortallDB () {\r\n      this.setState({\r\n        brandAll:[],\r\n        colorAll:[],\r\n        modelAll:[],\r\n        articleAll:[],\r\n        categoryAll:[],\r\n        imageAll:[]},\r\n        () => {\r\n        for (var i of this.state.allDB){\r\n          for (var o of i.brand){\r\n            this.state.brandAll.push(o)\r\n          }\r\n          for (var o of i.model){\r\n            this.state.modelAll.push(o)\r\n          }\r\n          for (var o of i.color){\r\n            this.state.colorAll.push(o)\r\n          }\r\n          for ( var o of i.article){\r\n            this.state.articleAll.push(o)\r\n          }\r\n          for (var o of i.category){\r\n            this.state.categoryAll.push(o)\r\n          }\r\n          for (var o of i.image){\r\n            this.state.imageAll.push(o)\r\n          }\r\n          this.setState({\r\n            brandAll: this.insertFront(Array.from(new Set(this.state.brandAll)).sort()),\r\n            modelAll: this.insertFront(Array.from(new Set(this.state.modelAll)).sort()),\r\n            colorAll: this.insertFront(Array.from(new Set(this.state.colorAll)).sort()),\r\n            articleAll: this.insertFront(Array.from(new Set(this.state.articleAll)).sort()),\r\n            categoryAll: this.insertFront(Array.from(new Set(this.state.categoryAll)).sort())\r\n          }, () => {\r\n          })\r\n      }\r\n    })\r\n  \r\n    }\r\n\r\n    resultArray (value) {\r\n      var listing = []\r\n      for (var i of value){\r\n        listing.push(i)\r\n      }\r\n      return listing\r\n    }\r\n\r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n      fetch(`http://localhost:9000/brand=${this.state.brand}&model=${this.state.model}&color=${this.state.color}&article=${String(this.state.article)}&category=${this.state.category}?page=${this.state.page}&limit=8`)\r\n      //http://localhost:9000/brand=Nike&model=Any&color=Any&article=Any&category=Any\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            if (result != \"NO\"){}\r\n            this.setState({\r\n              items: result.results,\r\n              totalPages: result.totalPages\r\n            },\r\n            console.log(\"not obj?\", result),\r\n            this.doPageArray);\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              items: [],\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n\r\n    updateHandler() {\r\n      console.log(\"B\", this.state.page)\r\n      fetch(`http://localhost:9000/brand=${this.state.brand}&model=${this.state.model}&color=${this.state.color}&article=${String(this.state.article)}&category=${this.state.category}?page=${this.state.page}&limit=8`)\r\n      //http://localhost:9000/brand=Nike&model=Any&color=Any&article=Any&category=Any\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            if (result != \"NO\"){}\r\n            this.setState({\r\n              items: result.results,\r\n              totalPages: result.totalPages\r\n            },\r\n            console.log(\"not obj?\", result),\r\n            this.doPageArray);\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              items: [],\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n\r\n    updateArrays () {\r\n          fetch(\"http://localhost:9000/allDB\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                allDB: result\r\n              },\r\n              () => {\r\n                this.sortallDB()\r\n                console.log(\"DB\", this.state.allDB)\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n    }\r\n\r\n    componentDidMount () {\r\n        window.addEventListener('load', this.updateArrays);\r\n        this.setState({\r\n          page: \"1\",\r\n        })\r\n    }\r\n\r\n    \r\n    handleBrand(event) {\r\n      this.setState({\r\n        page: \"1\"\r\n      })\r\n        this.setState({brand: event})\r\n    }\r\n\r\n    handleColor(event) {\r\n      this.setState({\r\n        page: \"1\"\r\n      })\r\n        this.setState({color: event})\r\n    }\r\n\r\n    handleModel(event) {\r\n      this.setState({\r\n        page: \"1\"\r\n      })\r\n        this.setState({model: event})\r\n    }\r\n\r\n\r\n    handleArticle(event) {\r\n      this.setState({\r\n        page: \"1\"\r\n      })\r\n        this.setState({article: event})\r\n    }\r\n\r\n    handleCategory(event) {\r\n      this.setState({\r\n        page: \"1\"\r\n      })\r\n        this.setState({category: event})\r\n    }\r\n\r\n    handleAll() {\r\n        this.handleBrand(\"Any\");\r\n        this.handleColor(\"Any\");\r\n        this.handleArticle(\"Any\");\r\n        this.handleModel(\"Any\");\r\n        this.handleCategory(\"Any\");\r\n    }\r\n\r\n    paginate (e) {\r\n      if (e != this.state.page){\r\n        this.setState ({\r\n          page: e\r\n        }, () => {\r\n          this.updateHandler()\r\n        });\r\n      }\r\n    }\r\n\r\n    render(){\r\n        if (this.state.items === undefined){\r\n            return (\r\n                <div className = \"filterBox\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label id = \"label\">Pick your filters\r\n                        <br/>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Brand</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.brand}>\r\n                            { this.state.brandAll && this.state.brandAll.map(item => <Dropdown.Item  onClick = {() => this.handleBrand(item)}> {item} </Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Model</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.model}>\r\n                            { this.state.modelAll && this.state.modelAll.map(item => <Dropdown.Item  onClick = {() => this.handleModel(item)}> {item} </Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Color</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.color}>\r\n                          { this.state.colorAll && this.state.colorAll.map(item => <Dropdown.Item  onClick = {() => this.handleColor(item)}> {item} </Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Article</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.article}>\r\n                          { this.state.articleAll && this.state.articleAll.map(item => <Dropdown.Item  onClick = {() => this.handleArticle(item)}> {item} </Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Category</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.category}>\r\n                          { this.state.categoryAll && this.state.categoryAll.map(item => <Dropdown.Item  onClick = {() => this.handleCategory(item)}> {item} </Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                       \r\n                    </label>\r\n                    <br/>\r\n                    <Button id = \"btnAll\" variant=\"primary\" onClick = {() => this.handleAll()}> All </Button>\r\n                    <Button id = \"inputButton\" as=\"input\" type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n          return(\r\n            <div>                \r\n              <div className = \"filterBox\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label id = \"label\">Pick your filters\r\n                    <br/>\r\n                    <div className = \"selection\">\r\n                    <h4 className = \"selectTitle\">Brand</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.brand}>\r\n                            { this.state.brandAll && this.state.brandAll.map(item => <Dropdown.Item  onClick = {() => this.handleBrand(item)}> {item} </Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Model</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.model}>\r\n                            { this.state.modelAll && this.state.modelAll.map(item => <Dropdown.Item  onClick = {() => this.handleModel(item)}> {item} </Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Color</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.color}>\r\n                          { this.state.colorAll && this.state.colorAll.map(item => <Dropdown.Item  onClick = {() => this.handleColor(item)}> {item} </Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Article</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.article}>\r\n                          { this.state.articleAll && this.state.articleAll.map(item => <Dropdown.Item  onClick = {() => this.handleArticle(item)}> {item} </Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                        <div className = \"selection\">\r\n                        <h4 className = \"selectTitle\">Category</h4>\r\n                        <DropdownButton id=\"dropdown\" title= {this.state.category}>\r\n                          { this.state.categoryAll && this.state.categoryAll.map(item => <Dropdown.Item  onClick = {() => this.handleCategory(item)}> {item} </Dropdown.Item> )}\r\n                        </DropdownButton>\r\n                        </div>\r\n                    </label>\r\n                    <br/>\r\n                    <Button id = \"btnAll\" variant=\"primary\" onClick = {() => this.handleAll()}> All </Button>\r\n                    <Button id = \"inputButton\" as=\"input\" type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n                <div className=\"listBox\">\r\n                    {this.state.items.map((clothes, index) => (\r\n                    <div key={index} className = \"bundles\">\r\n                        <h3>{clothes.brand}</h3>\r\n                        <p>{clothes.model}</p>\r\n                        <p>{clothes.color}</p>\r\n                        <img id = \"imageMap\" src = {clothes.image}/>\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <Pagination totalPages = {this.state.totalPages} paginate = {this.paginate}/>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Filter;\r\n\r\n\r\n/*\r\nfetch(\"http://localhost:9000/all=brand\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                brandAll: result\r\n              },\r\n              () => {\r\n\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n          fetch(\"http://localhost:9000/all=model\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                modelAll: result\r\n              },\r\n              () => {\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n          fetch(\"http://localhost:9000/all=color\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                colorAll: result\r\n              },\r\n              () => {\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n          fetch(\"http://localhost:9000/all=article\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                articleAll: result\r\n              },\r\n              () => {\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n          fetch(\"http://localhost:9000/all=category\")\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                categoryAll: result\r\n              },\r\n              () => {\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n          */","import React, {Component} from 'react';\r\nimport Header from './Header'\r\nimport Filter from './Filter'\r\nimport './App.css';\r\n\r\nclass FirstPage extends Component{\r\n  render(){\r\n    return (\r\n        <div className = \"allBox\">\r\n            <Header/>\r\n            <Filter/>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default FirstPage;\r\n","import React from 'react';\nimport FirstPage from './FirstPage'\nimport Post from './Post'\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, HashRouter,  } from 'react-router-dom'\n\nfunction App() {\n  //basename={process.env.PUBLIC_URL}\n  return (\n    <div >\n        <HashRouter>\n          <Route path = '/' exact component = { FirstPage }/>\n          <Route path = \"/Post\" exact component = { Post }/>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\nrequire('dotenv').config()\n\nReactDOM.render(<HashRouter basename={process.env.PUBLIC_URL}>< App /></HashRouter>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}